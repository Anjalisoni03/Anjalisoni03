-----------------------------------------------------1. positive or negative-------------------------
#include <iostream>
using namespace std;
int main() {
    int x;
    cin>>x;
    if(x>0)
    {
        cout<<"no. is positive";
    }
    else if(x==0)
    {
        cout<<"no. is zero";
    }
    else
    {
        cout<<"no. is negative";
    }
    return 0;
}

------------------- ------------------2. even or odd----------------------------------------------------
#include <iostream>
using namespace std;
int main() {
    int x;
    cin>>x;
    if(x%2==0)
       cout<<"no. is even";
    else
       cout<<"no. is odd";
    return 0;
}

-------------------------------------3.sum of n natural number-----------------------------------
#include <iostream>
using namespace std;
int main() {
    int x,sum;
    cin>>x;
    sum=x*(x+1)/2;
    cout<<"sum of "<<x<<" natural number is: "<<sum;
    return 0;
}
---------------------------------------4.sum in range----------------------------------------------
by arithmetic formula
#include <iostream>
using namespace std;
int main() {
    int x,y,sum;
    cout<<"enter the value of start number ";
    cin>>x;
    cout<<"enter the value of last number ";
    cin>>y;
    int n=y-x+1;
    sum=n*((2*x)+n-1)/2;
    cout<<sum;    
    return 0;
}

----------------------------------------------5.greaterin 2 number------------------------------
#include <iostream>
using namespace std;
int main() {
    int x,y,greater;
    cin>>x>>y;
    if(x==y)
         cout<<"equal";
    else
        greater=x>y?x:y;
        cout<<greater<<" is greater";
    return 0;
}
---------------------------------------------6. greater in 3 number-------------------------------
#include <iostream>
using namespace std;
int main() {
    int x,y,z,greater;
    cin>>x>>y>>z;
    if(x==y==z)
        cout<<"equal";
    else
        greater=z>(x>y?x:y)?z:(x>y?x:y);
    cout<<greater<<" is greater";
    return 0;
}

-----------------------------------------------7.leap year------------------------------------
#include <iostream>
using namespace std;
int main() {
    int year;
    cin>>year;
    if(year%400==0)
        cout<<"leap year";
    else if(year%4==0 && year%100!=0)
        cout<<"leap year";
    else
        cout<<"not a leap year";
    return 0;
}
-------------------------------------------------8.prime number-------------------------
#include <iostream>
using namespace std;
int main() {
    int p,i,count=0;
    cin>>p;
    for(i=1;i<=p;i++)
    {
        if(p%i==0)
            count+= 1;
    }
    if(count<=2)
         cout<<p<<" is a prime number";
    else
        cout<<p<<" not a prime number";
    return 0;
}
----------------------------------------------9. prime in range-----------------------
#include<iostream>
using namespace std;
int main()
{
    int l,u;
    cin>>l>>u;
    for(int i=l;i<u;i++)
    {
        if(i==2)
        {
            cout<<i<<" ";
            continue;
        }
        for(int j=2;j<i;j++)
        {
            if(i%j==0)
            {
                break;
            }
            else if(i==j+1)
            {
                cout<<i<<" ";
            }
        }
    }
    return 0;
}
---------------------------------------10.sum  of digits---------------------------
#include<iostream>
using namespace std;
int main()
{
    int x,r,sum=0; 
    cin>>x;
    while(x>0)
    {
        r=x%10;
        sum+= r;
        x=x/10;
    }
    cout<<sum;
    return 0;
}
---------------------------------------11. reverse of number--------------------------
#include<iostream>
using namespace std;
int main()
{
    int x,r,rev=0; 
    cin>>x;
    while(x>0)
    {
        r=x%10;
        rev=rev*10+r;
        x=x/10;
    }
    cout<<rev;
    return 0;
}
-------------------------------12.palindrome------------------------
#include<iostream>
using namespace std;
int main()
{
    int temp,x,r,rev=0; 
    cin>>x;
    temp=x;
    while(x>0)
    {
        r=x%10;
        rev=rev*10+r;
        x/= 10;
    }
    if(temp==rev)
    {
        cout<<temp<<" is palindrome";
    }
    else
        cout<<temp<<" is not palindrome";
    return 0;
}
-------------------------------------13.armstrong number-----------------------------
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
    int x,sum=0,temp,digit,len=0;
    cin>>x;
    int y=x;
    temp=x;
    while(x)
    {
        len++;
        x/= 10;
    }
    cout<<len<<endl;
    while(temp>0)
    {
        digit=temp%10;
        sum=sum+pow(digit,len);
        temp /= 10;
    }
    if(y==sum)
        cout<<y<<" is armstrong";
    else
        cout<<y<<" is not armstrong";
    return 0;
}

-------------------------------------------------14. armstrong in range--------------------------
#include<iostream>
#include<math.h>
using namespace std;
int main()
{
    int l=0,u=1000,i,digit;
    for(i=l;i<=u;i++)
    {
        int y=i, sum=0,x=i,len=0;
        while(x!=0)
        {
            len++;
            x/= 10;
        }
        //cout<<len<<endl;
         while(y!=0)
        {
            digit=y%10;
            y /= 10;
            sum+= pow(digit,len);
            
        }
        if(i==sum)
            cout<<i<<" ";
    }
    return 0;
}
-------------------------------------------------15.fibonnaci number---------------------------------
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int fib[n];
    fib[0]=0;
    fib[1]=1;
    cout << fib[0] << ", " << fib[1] <<", ";
    for(int i=2;i<n;i++)
    {   
        fib[i]=fib[i-1]+fib[i-2];
        cout<<fib[i]<<", ";
    }
    return 0;
}
-------------------------------------------------------16.nth term of fibonnaci------------------------------
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int fib[n+1];
    fib[0]=0;
    fib[1]=1;
    for(int i=2;i<=n;i++)
    {   
        fib[i]=fib[i-1]+fib[i-2];
    }
    cout<<fib[n];
    return 0;
}
-------------------------------------------------17.factorial of a number--------------------------
#include<iostream>
using namespace std;
int main()
{
    int fac,i;
    cin>>fac;
    for(i=fac-1;i>0;i--)
    {
        fac=fac*i;
    }
    cout<<fac;
    return 0;
}
------------------------------------------------18.power(not works on interger, negative, decimal)--------------
#include<iostream>
using namespace std;
int main()
{
    int b,e,res=1.0;
    cin>>b>>e;
    for(int i=0;i<e;i++)
    {
        res*= b;
    }
    cout<<res;
    return 0;
}
-----------------------------------------------------19.factor-----------------------
#include<iostream>
using namespace std;
int main()
{
    int n,i;
    cin>>n;
    for(i=1;i<n+1;i++)
    {
        if(n%i==0)
        {
            cout<<i<<" ";
        }
    }
    return 0;
}

#include<bits/stdc++.h>
using namespace std;
void factors(int num)
{
    int i,flag= false;
    for(i=1;i<=sqrt(num);i++)
    {
        if(num%i==0)
            cout<<i<<" ";
        if(i==num/i)
            flag=true;
    }
    if(flag) 
        i -= 2; 
    for(;i>=1;i--)
    {
        if (num % i == 0)
            cout << num/i << " ";
    }
}
int main()
{
    int num;
    cin>>num;
    factors(num);
}

-----------------------------------20.strong number-------------------------
whose addition of each number's factorial is same as number 145 = 1! +4! +5! =145
#include<bits/stdc++.h>
using namespace std;
int fac(int r)
{   int f=r;
    for(int i=r-1;i>0;i--)
        f=f*i;
    return f;
}
void strong(int num)
{
    int r, s=0, x;
    x=num;
    while(x>0)
    {
        r=x%10;
        s+= fac(r);
        x/=10;
    }
    if(s==num)
        cout<<num<<" is a strong number";
    else
        cout<<num<<" is not a strong number";
}
int main()
{
    int num;
    cin>>num;
    strong(num);
}

-----------------------------------21. perfect number (whose sum of factors except itself is number itself)------------------------- 
#include<iostream>
using namespace std;
int main()
{
    int num,i,r,sum=0;
    cin>>num;
    int x=num;
    for(int i=1;i<x;i++)
    {
        if(x%i==0)
            sum+= i;
    }
    if (sum==num)
        cout<<num<<" is a perfect number";
    else
        cout<<num<<" not a perfect number";
    return 0;
}

---------------------------------------------------------22. automorphic number--------------------------------------------
end of number and square is same 5 - 25, 76 -5776
#include<iostream>
using namespace std;
int automorphic(int num)
{
    int sq;
    sq=num*num;
    
    while(num>0)
    {
        if(num%10!=sq%10)
            return 0;
        num /=10;
        sq/= 10;
    }
    return 1;
}
int main()
{
    int num,s;
    cin>>num;
    s=num*num;
    if (automorphic(num))
        cout<<num<<" whose square is "<<s<<" is a automorphic number";
    else
        cout<<num<<" whose square is "<<s<<" is not a automorphic number";

}

-------------------------------------------------23.harshad number--------------------------
number is divisible by sum of its values. ex. 153 =1+5+3=9 and 153%9=0
#include<iostream>
using namespace std;
void harshad(int num)
{
    int r,x,sum=0;
    x=num;
    while(x>0)
    {
        r=x%10;
        sum+= r;
        x/= 10;
    }
    if(x%num==0)
        cout<<num<<" is a harshad number";
    else
        cout<<num<<" is a not harshad number";
}
int main()
{
    int num;
    cin>>num;
    harshad(num);
}
----------------------------------------------------------------24.abudant number-----------------------------------
sum of factors is greater than original number ex. 12= 1,2,3,4,6=16 and 16>12
#include<iostream>
using namespace std;
void abudant(int num)
{
    int x,sum=0;
    x=num;
    for(int i=1;i<x;i++)
    {
        if(x%i==0)
            sum+=i;
    }
    if(sum>num)
        cout<<num<<" is a abudant number";
    else
        cout<<num<<" is not a abudant number";
}
int main()
{
    int num;
    cin>>num;
    abudant(num);
}
-------------------------------------------------------------25.friendly pair---------------------------------
Two numbers num1 & num2 are friendly pairs if the following holds true - (Sum of divisors of num1)/num1= (Sum of divisors of num2)/num2
#include<iostream>
using namespace std;
int sum_div(int n)
{
    int x,sum=0;
    x=n;
    for(int i=1;i<x;i++)
    {
        if(x%i==0)
            sum+=i;
    }
    return sum;
}
void friendly_pair(int num1,int num2)
{
    if(sum_div(num1)/num1==sum_div(num2)/num2)
        cout<<num1<<" and "<<num2<<" is a friendly pair";
    else
        cout<<num1<<" and "<<num2<<" is not a friendly pair";
}
int main()
{
    int num1,num2;
    cin>>num1>>num2;
    friendly_pair(num1,num2);
}
